savantVersion = "1.0.0"

project(group: "io.fusionauth", name: "fusionauth-example-password-encryptor", version: "0.1.0", licenses: ["ApacheV2_0"]) {
  workflow {
    standard()
  }

  publishWorkflow {
    subversion(repository: "http://svn.inversoft.com/internal/savant")
  }

  dependencies {
    group(name: "compile") {
      dependency(id: "com.google.inject:guice:4.2.3")
      dependency(id: "com.google.inject.extensions:guice-multibindings:4.2.3")
      // Required for the Argon2 Plugin.
      // argon-jvm
      //    \__ argon2-jvm-nolibs
      dependency(id: "de.mkammerer:argon2-jvm:2.9.1")
      dependency(id: "de.mkammerer:argon2-jvm-nolibs:2.9.1")
    }
    group(name: "provided") {
      dependency(id: "io.fusionauth:fusionauth-plugin-api:1.15.8")
    }
    group(name: "test-compile") {
      dependency(id: "org.testng:testng:6.8.7")
    }
  }

  publications {
    standard()
  }
}

/*
 * Define Plugins
 */

dependency = loadPlugin(id: "org.savantbuild.plugin:dependency:${savantVersion}")
java = loadPlugin(id: "org.savantbuild.plugin:java:${savantVersion}")
javaTestNG = loadPlugin(id: "org.savantbuild.plugin:java-testng:${savantVersion}")
idea = loadPlugin(id: "org.savantbuild.plugin:idea:${savantVersion}")
release = loadPlugin(id: "org.savantbuild.plugin:release-git:${savantVersion}")

/*
 * Plugin Settings
 */

java.settings.javaVersion = "1.8"
javaTestNG.settings.javaVersion = "1.8"

target(name: "clean", description: "Cleans out the build directory") {
  java.clean()
}

target(name: "compile", description: "Compiles the project") {
  java.compile()
}

target(name: "jar", description: "JARs the project", dependsOn: ["compile"]) {
  java.jar()
}

target(name: "test", description: "Executes the projects tests", dependsOn: ["jar"]) {
  javaTestNG.test()
}

target(name: "int", description: "Releases a local integration build of the project", dependsOn: ["test"]) {
  dependency.integrate()
}

target(name: "idea", description: "Updates the IntelliJ IDEA module file") {
  idea.iml()
}

target(name: "print-dependency-tree", description: "Prints the dependency tree") {
  dependency.printFull()
}

target(name: "release", description: "Releases a full version of the project", dependsOn: ["clean", "int"]) {
  release.release()
}